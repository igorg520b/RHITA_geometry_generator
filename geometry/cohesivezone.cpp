#include "cohesivezone.h"
#include <iomanip>
#include <Eigen/Geometry>

void icy::CohesiveZone::Reset()
{
    elems[0] = elems[1] = nullptr;
    for(int i=0;i<6;i++) nds[i] = nullptr;
    isDamaged = false;
    isActive = true;
    for(int i=0;i<nQPts;i++) pmax[i] = tmax[i] = 0;
}



const Eigen::Vector3d icy::CohesiveZone::quadraturePoints[nQPts] = {
    (Eigen::Vector3d() << 1./6.,1./6.,2./3.).finished(),
    (Eigen::Vector3d() << 1./6.,2./3.,1./6.).finished(),
    (Eigen::Vector3d() << 2./3.,1./6.,1./6.).finished()
};



const Eigen::Matrix<double,18,3> icy::CohesiveZone::B[nQPts] = {
    (Eigen::Matrix<double,18,3>() <<
         0.1666666666666667,0,0,
     0,0.1666666666666667,0,
     0,0,0.1666666666666667,
     0.1666666666666667,0,0,
     0,0.1666666666666667,0,
     0,0,0.1666666666666667,
     0.6666666666666666,0,0,
     0,0.6666666666666666,0,
     0,0,0.6666666666666666,
     -0.1666666666666667,-0,-0,
     -0,-0.1666666666666667,-0,
     -0,-0,-0.1666666666666667,
     -0.1666666666666667,-0,-0,
     -0,-0.1666666666666667,-0,
     -0,-0,-0.1666666666666667,
     -0.6666666666666666,-0,-0,
     -0,-0.6666666666666666,-0,
     -0,-0,-0.6666666666666666).finished(),

    (Eigen::Matrix<double,18,3>() <<
         0.1666666666666667,0,0,
     0,0.1666666666666667,0,
     0,0,0.1666666666666667,
     0.6666666666666666,0,0,
     0,0.6666666666666666,0,
     0,0,0.6666666666666666,
     0.1666666666666667,0,0,
     0,0.1666666666666667,0,
     0,0,0.1666666666666667,
     -0.1666666666666667,-0,-0,
     -0,-0.1666666666666667,-0,
     -0,-0,-0.1666666666666667,
     -0.6666666666666666,-0,-0,
     -0,-0.6666666666666666,-0,
     -0,-0,-0.6666666666666666,
     -0.1666666666666667,-0,-0,
     -0,-0.1666666666666667,-0,
     -0,-0,-0.1666666666666667).finished(),

    (Eigen::Matrix<double,18,3>() <<
         0.6666666666666666,0,0,
     0,0.6666666666666666,0,
     0,0,0.6666666666666666,
     0.1666666666666667,0,0,
     0,0.1666666666666667,0,
     0,0,0.1666666666666667,
     0.1666666666666667,0,0,
     0,0.1666666666666667,0,
     0,0,0.1666666666666667,
     -0.6666666666666666,-0,-0,
     -0,-0.6666666666666666,-0,
     -0,-0,-0.6666666666666666,
     -0.1666666666666667,-0,-0,
     -0,-0.1666666666666667,-0,
     -0,-0,-0.1666666666666667,
     -0.1666666666666667,-0,-0,
     -0,-0.1666666666666667,-0,
     -0,-0,-0.1666666666666667).finished()};
